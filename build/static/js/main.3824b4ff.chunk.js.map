{"version":3,"sources":["serviceWorker.js","components/Searchbar.js","utils/hooks/FavouritesContext.js","components/Thumbnail.js","shared/api.js","utils/fetch.js","utils/hooks/MoviesContext.js","utils/median.js","components/Navigation.js","constants/Routes.js","pages/BingeList.js","pages/Favourites.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Searchbar","_ref","_ref$onSearch","onSearch","_useState","useState","_useState2","Object","slicedToArray","value","setValue","react_default","a","createElement","InputGroup","Input","data-testid","title","onChange","e","target","onKeyDown","key","handleKeyDown","InputGroupAddon","addonType","Button","color","onClick","isEmpty","defaultProps","NOOP","FavouritesContext","React","createContext","FavouritesProvider","Provider","Consumer","Thumbnail","_ref$movie","movie","_ref$movie$id","id","_ref$movie$title","_ref$movie$rating","rating","_ref$movie$overview","overview","_ref$movie$releaseDat","releaseDate","_ref$movie$genres","genres","_ref$movie$poster","poster","info","detailInfo","_ref$median","median","year","Date","getFullYear","_useContext","useContext","favourites","addFavourite","removeFavourite","isFavourite","find","favourite","Col","sm","xs","Card","className","Row","xl","lg","alt","src","CardImg","fullPath","CardBody","CardTitle","concat","CardSubtitle","map","join","CardText","truncate","length","separator","height","jsx","size","request","method","entity","settings","arguments","undefined","Promise","resolve","reject","headers","objectSpread","url","fetch","then","response","status","json","res","data","catch","console","error","Error","getFilmsByGenre","asyncToGenerator","regenerator_default","mark","_callee","req","offset","limit","getTotalMovies","moviesLength","films","_args","wrap","_context","prev","next","capitalize","head","words","trim","sent","get","abrupt","toConsumableArray","t0","stop","apply","this","MoviesContext","MoviesProvider","movies","order","sort","Navigation","withRouter","props","customNav","pathname","Fragment","Nav","navbar","NavItem","react_router_dom","to","index_es","icon","faArrowLeft","inverse","NavbarBrand","Navbar","dark","BingeList","setMovies","setMedian","_useState3","_useState4","text","setText","handleSearch","category","isString","log","_x","useEffect","getMedian","components_Navigation","Container","components_Searchbar","index","components_Thumbnail","Favourites","App","setFavourites","style","obj","filter","film","react_router","exact","path","component","from","global","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3824b4ff.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, InputGroupAddon, Button, Input } from 'reactstrap';\nimport isEmpty from 'lodash/isEmpty';\n\nconst NOOP = () => {};\n\nconst Searchbar = ({ onSearch = () => {} }) => {\n  const [value, setValue] = useState('');\n\n  const handleKeyDown = (e, value) => {\n    if (e.key === 'Enter' && value) {\n      onSearch(value);\n    }\n  };\n\n  return (\n    <InputGroup>\n      <Input\n        data-testid='searchbar'\n        title='Search movies by genre'\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        onKeyDown={e => handleKeyDown(e, value)}\n      />\n      <InputGroupAddon addonType='append'>\n        <Button\n          color='secondary'\n          onClick={() => {\n            if (!isEmpty(value)) {\n              onSearch(value);\n            }\n          }}\n        >\n          SEARCH\n        </Button>\n      </InputGroupAddon>\n    </InputGroup>\n  );\n};\n\nSearchbar.propTypes = {\n  onSearch: PropTypes.func,\n};\n\nSearchbar.defaultProps = {\n  onSearch: NOOP(),\n};\n\nexport default Searchbar;\n","import React from 'react';\n\nconst FavouritesContext = React.createContext({});\n\nexport const FavouritesProvider = FavouritesContext.Provider;\nexport const FavouritesConsumer = FavouritesContext.Consumer;\nexport default FavouritesContext;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Row,\n  Col,\n} from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport map from 'lodash/map';\nimport truncate from 'lodash/truncate';\nimport find from 'lodash/find';\nimport isEmpty from 'lodash/isEmpty';\nimport FavouritesContext from '../utils/hooks/FavouritesContext';\n\nconst Thumbnail = ({\n  movie: {\n    id = 0,\n    title = '',\n    rating = 0.0,\n    overview = '',\n    releaseDate = '',\n    genres = [],\n    poster = {},\n  },\n  detailInfo: info,\n  median = 0.0,\n}) => {\n  const year = new Date(releaseDate).getFullYear();\n  const { favourites, addFavourite, removeFavourite } = useContext(\n    FavouritesContext\n  );\n\n  const isFavourite = !isEmpty(favourites)\n    ? find(favourites, favourite => favourite.id === id)\n    : false;\n\n  return (\n    <Col sm='6' xs='6'>\n      <Card className='card-info-thumbnail' data-testid='thumbnail'>\n        <Row>\n          <Col xl='4' lg='4'>\n            <div>\n              {isFavourite ? (\n                <img\n                  alt='Remove favorite icon'\n                  className='floating-image image-top'\n                  src='../../img/png/remove_favorite.png'\n                  onClick={() => removeFavourite(info)}\n                ></img>\n              ) : (\n                <img\n                  alt='Add favorite icon'\n                  className='floating-image image-top'\n                  src='../../img/png/add_favorite.png'\n                  onClick={() => addFavourite(info)}\n                ></img>\n              )}\n              <CardImg\n                src={poster.fullPath}\n                alt='Image of'\n                className='picture-container'\n              />\n              {rating >= median && (\n                <img\n                  className='floating-image image-bottom d-lg-none'\n                  alt='Above median star icon'\n                  src='../../img/png/above_median_star.png'\n                ></img>\n              )}\n            </div>\n          </Col>\n          <Col xl='8' lg='8' className={`d-none d-lg-block card-body-content`}>\n            <CardBody>\n              <CardTitle>\n                <Row>\n                  <Col xl='9' lg='9'>\n                    <h4\n                      className='card-text-overflow-film'\n                      data-testid='movieTitle'\n                    >\n                      {title}\n                    </h4>\n                  </Col>\n                  <Col xl='3' lg='3' className='right-alignment'>\n                    <img\n                      alt='Rating star icon'\n                      src='../../img/png/rating_star.png'\n                    ></img>\n                    <span>{` ${rating}`}</span>\n                  </Col>\n                </Row>\n              </CardTitle>\n              <CardSubtitle>\n                <Row>\n                  <Col xl='3' lg='4'>\n                    <img\n                      alt='Calendar icon'\n                      src='../../img/png/calendar_icon.png'\n                    ></img>\n                    <span>{` ${year}`}</span>\n                  </Col>\n                  <Col\n                    xl='9'\n                    lg='8'\n                    className='right-alignment card-text-overflow-film'\n                  >\n                    <i>{map(genres, 'name').join(', ')}</i>\n                  </Col>\n                </Row>\n              </CardSubtitle>\n              <br />\n              <CardText>\n                {truncate(overview, { length: 120, separator: /,? +/ })}\n              </CardText>\n              <hr />\n              <Row className={`align-center-row`}>\n                <Col>\n                  {rating >= median && (\n                    <img\n                      alt='Above median icon'\n                      src='../../img/png/above_median_star.png'\n                      height='21'\n                    ></img>\n                  )}\n                </Col>\n                <Col className={`right-alignment`}>\n                  <span className='more-info'>\n                    <b>MORE INFO</b>\n                  </span>\n                </Col>\n              </Row>\n            </CardBody>\n          </Col>\n        </Row>\n        <style jsx>{`\n          .card-info-thumbnail {\n            color: black;\n            margin: 1em 0 1em 0;\n          }\n\n          .card-text-overflow-film {\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n          }\n\n          .floating-image {\n            position: absolute;\n            z-index: 1;\n          }\n\n          .image-top {\n            top: 0;\n            cursor: pointer;\n          }\n\n          .image-bottom {\n            bottom: 0;\n          }\n\n          .more-info {\n            color: MediumTurquoise;\n            cursor: pointer;\n          }\n\n          .picture-container {\n            height: 100%;\n            position: absolute;\n          }\n\n          @media (max-width: 991px) {\n            .picture-container {\n              position: initial;\n            }\n          }\n\n          .card-body-content {\n            padding-left: 0;\n          }\n\n          .right-alignment {\n            text-align: right;\n          }\n\n          @media (max-width: 991px) {\n            .image-bottom {\n              left: 1em;\n            }\n          }\n\n          .padding-right {\n            padding-right: 10px;\n          }\n\n          .align-center-row {\n            align-items: center;\n          }\n        `}</style>\n      </Card>\n    </Col>\n  );\n};\n\nThumbnail.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    rating: PropTypes.number,\n    overview: PropTypes.string,\n    releaseDate: PropTypes.string,\n    genres: PropTypes.array,\n    poster: PropTypes.shape({\n      fullPath: PropTypes.string,\n      size: PropTypes.string,\n    }),\n  }),\n  detailInfo: PropTypes.object,\n  median: PropTypes.number,\n};\n\nThumbnail.defaultProps = {\n  movie: {\n    title: '',\n    rating: 0.0,\n    overview: '',\n    releaseDate: '',\n    genres: [],\n    poster: {\n      fullPath: '',\n      size: '',\n    },\n  },\n  detailInfo: {},\n  median: 0,\n};\n\nexport default Thumbnail;\n","const ENDPOINT = 'http://localhost:4000';\n\nconst request = (method, entity, settings = {}) =>\n  new Promise((resolve, reject) => {\n    const headers = {\n      ...(settings.headers || {}),\n    };\n\n    const url = `${ENDPOINT}/${entity}`;\n\n    fetch(url, {\n      ...settings,\n      method,\n      headers,\n    })\n      .then(response => {\n        if (response.status >= 200 && response.status < 300) {\n          return response\n            .json()\n            .then(res => ({\n              headers: response.headers,\n              status: response.status,\n              data: res,\n            }))\n            .then(resolve)\n            .catch(() => resolve());\n        }\n\n        response\n          .json()\n          .then(reject)\n          .catch(reject);\n      })\n      .catch(e => {\n        console.error(e);\n        reject(new Error(`There's a problem with the request`));\n      });\n  });\n\nexport default request;\n","import request from '../shared/api';\nimport capitalize from 'lodash/capitalize';\nimport head from 'lodash/head';\nimport words from 'lodash/words';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nconst getFilmsByGenre = async (req = '', offset = 0, limit = 0) => {\n  try {\n    const getTotalMovies = await request(\n      'get',\n      `movies?genre=${capitalize(\n        head(words(req.trim()))\n      )}&offset=${offset}&limit=${limit}`\n    );\n\n    if (get(getTotalMovies, 'data.error')) {\n      return `No results for genre \"${req}\"`;\n    }\n\n    const moviesLength = get(getTotalMovies, 'data.metadata.total', 0);\n\n    const res = await request(\n      'get',\n      `movies?genre=${capitalize(\n        head(words(req.trim()))\n      )}&offset=${offset}&limit=${moviesLength}`\n    );\n\n    const films = get(res, 'data.data', []);\n\n    return !isEmpty(films) ? [...films] : `No results for genre \"${req}\"`;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\n// Doesn't work due to PATCH is not allowed by Access-Control-Allow-Methods\n\n/*\nconst getFavouritesFilms = async () => {\n  try {\n    const res = await request('get', 'favorites');\n\n    const favourites = get(res, 'data', []);\n    return !isEmpty(favourites)\n      ? [...favourites]\n      : `You don't have any favourite movie!`;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst patchFavouritesFilms = async body => {\n  try {\n    const res = await request('patch', 'favorites', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n    console.log(res);\n  } catch (e) {\n    console.error(e);\n  }\n};\n\n*/\nexport { getFilmsByGenre };\n","import React from 'react';\n\nconst MoviesContext = React.createContext({});\n\nexport const MoviesProvider = MoviesContext.Provider;\nexport const MoviesConsumer = MoviesContext.Consumer;\nexport default MoviesContext;\n","import map from 'lodash/map';\n\nconst median = movies => {\n  const mapId = map(movies, 'rating');\n  const order = mapId.sort();\n\n  const median =\n    order.length % 2 === 0\n      ? (order[order.length / 2] + order[order.length / 2 - 1]) / 2\n      : order[(order.length - 1) / 2];\n\n  return median;\n};\n\nexport default median;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Navbar, NavbarBrand, Nav, NavItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport * as Routes from '../constants/Routes';\n\nconst MainViewNav = () => (\n  <>\n    <Nav>\n      <NavbarBrand className='white-label'>My Binge List</NavbarBrand>\n      <NavItem className='right-alignment-navbar'>\n        <Link to={Routes.FAVOURITES}>\n          <img alt='Favorites link page' src='../../img/png/favorites.png' />\n        </Link>\n      </NavItem>\n    </Nav>\n    <style jsx>{`\n      .right-alignment-navbar {\n        position: absolute;\n        right: 2rem;\n        top: 0.8rem;\n      }\n    `}</style>\n  </>\n);\n\nconst FavouritesNav = () => (\n  <>\n    <Nav navbar>\n      <NavItem className='left-alignment-navbar'>\n        <Link to={Routes.BINGE_LIST}>\n          <FontAwesomeIcon data-testid='backIcon' icon={faArrowLeft} inverse />\n        </Link>\n      </NavItem>\n      <NavbarBrand className='white-label'>Favourite Movies</NavbarBrand>\n    </Nav>\n    <style jsx>{`\n      .left-alignment-navbar {\n        position: absolute;\n        left: 2rem;\n        top: 0.8rem;\n      }\n    `}</style>\n  </>\n);\n\nconst Navigation = withRouter(props => {\n  const location = props.location.pathname;\n\n  let customNav;\n\n  if (location === Routes.FAVOURITES) {\n    customNav = FavouritesNav();\n  } else {\n    customNav = MainViewNav();\n  }\n\n  return (\n    <Navbar color='dark' dark>\n      {customNav}\n      <style jsx>\n        {`\n          .navbar {\n            justify-content: center;\n            align-items: center;\n            align-content: center;\n            font-size: 20px;\n          }\n        `}\n      </style>\n    </Navbar>\n  );\n});\n\nexport default Navigation;\n","export const FAVOURITES = '/favourites';\nexport const BINGE_LIST = '/';\n","import React, { useState, useContext, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport Searchbar from '../components/Searchbar';\nimport Thumbnail from '../components/Thumbnail';\nimport { getFilmsByGenre } from '../utils/fetch';\n\nimport isEmpty from 'lodash/isEmpty';\nimport isString from 'lodash/isString';\nimport map from 'lodash/map';\nimport MoviesContext from '../utils/hooks/MoviesContext';\nimport getMedian from '../utils/median';\nimport Navigation from '../components/Navigation';\n\nconst BingeList = () => {\n  const { movies, setMovies } = useContext(MoviesContext);\n  const [median, setMedian] = useState(0);\n  const [text, setText] = useState(\n    'Please enter a genre to find movies e.g. Action'\n  );\n\n  const handleSearch = async category => {\n    try {\n      const res = await getFilmsByGenre(category);\n      if (!isString(res) && !isEmpty(res)) {\n        setMovies([...res]);\n      } else {\n        console.log(typeof setMovies);\n        setMovies([]);\n        setText(res);\n      }\n    } catch (e) {\n      console.error('Exception', e);\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(movies)) {\n      const median = getMedian(movies);\n      setMedian(median);\n    }\n  }, [movies, setMedian]);\n\n  return (\n    <div className='binge-list-view'>\n      <Navigation />\n      <Container className='movies-container'>\n        <Searchbar onSearch={handleSearch} />\n        <Row>\n          {!isEmpty(movies) ? (\n            map(movies, (movie, index) => (\n              <Thumbnail\n                movie={movie}\n                detailInfo={movie}\n                median={median}\n                key={`thumbnail-${movie.id}-${index}`}\n              />\n            ))\n          ) : (\n            <Col className='text-info-page' data-testid='infoBingeList'>\n              <h3>{text}</h3>\n            </Col>\n          )}\n        </Row>\n      </Container>\n      <style jsx>\n        {`\n          .binge-list-view {\n            height: 100%;\n            color: white;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default BingeList;\n","import React, { useContext } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col, Container } from 'reactstrap';\nimport Thumbnail from '../components/Thumbnail';\nimport FavouritesContext from '../utils/hooks/FavouritesContext';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport Navigation from '../components/Navigation';\n\nconst Favourites = () => {\n  const { favourites } = useContext(FavouritesContext);\n\n  return (\n    <>\n      <Navigation />\n      <Container>\n        <Row>\n          {!isEmpty(favourites) ? (\n            map(favourites, movie => (\n              <Thumbnail\n                movie={movie}\n                detailInfo={movie}\n                key={`thumbnail-${movie.id}`}\n              />\n            ))\n          ) : (\n            <Col className='text-info-page'>\n              <h3 data-testid='noFavouritesText'>\n                There&apos;s no favourites movies!\n              </h3>\n            </Col>\n          )}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Favourites;\n","import React, { useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport BingeList from '../pages/BingeList';\nimport Favourites from '../pages/Favourites';\nimport { FavouritesProvider } from '../utils/hooks/FavouritesContext';\nimport { MoviesProvider } from '../utils/hooks/MoviesContext';\n\nimport filter from 'lodash/filter';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [favourites, setFavourites] = useState([]);\n\n  const addFavourite = movie => {\n    setFavourites(obj => (obj ? [...obj, movie] : [movie]));\n  };\n\n  const removeFavourite = movie => {\n    const { id } = movie;\n    setFavourites(obj => {\n      setFavourites(filter(obj, film => film.id !== id));\n    });\n  };\n\n  return (\n    <div style={{ height: '100vh' }}>\n      <FavouritesProvider value={{ favourites, addFavourite, removeFavourite }}>\n        <MoviesProvider value={{ movies, setMovies }}>\n          <Switch>\n            <Route exact path='/' component={BingeList} />\n            <Route exact path='/favourites' component={Favourites} />\n            <Redirect from='*' to={'/'} />\n          </Switch>\n        </MoviesProvider>\n      </FavouritesProvider>\n      <style jsx global>{`\n        body {\n          margin: 0;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n            'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n            'Helvetica Neue', sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n          background: rgb(40, 42, 54);\n        }\n\n        code {\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n            monospace;\n        }\n\n        .navbar {\n          margin-bottom: 2rem;\n        }\n\n        .white-label {\n          color: white !important;\n          text-decoration: none !important;\n        }\n\n        .text-info-page {\n          text-align: center;\n          color: white;\n          margin-top: 1rem;\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'whatwg-fetch'; // required until cypress support fetch API\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}